/////////////////////////////////////////////////////////////////////////////////
/// \addtogroup serial_link_frame_protocol
/// \{
///
///
/// \file
/// \brief Fichier en-tete du module serial_link_frame_protocol
///
///
///
/////////////////////////////////////////////////////////////////////////////////

// Define to prevent recursive inclusion
#ifndef __SERIAL_LINK_FRAME_PROTOCOL_H_
/// \cond IGNORE_FOLLOWING
#define __SERIAL_LINK_FRAME_PROTOCOL_H_
/// \endcond

#ifdef __cplusplus
extern "C"
{
#endif
/////////////////////////////////////////////////////////////////////////////////
// Includes
/////////////////////////////////////////////////////////////////////////////////
#include <stdint.h>
#include <stdbool.h>

#include "serial_link.h"
/////////////////////////////////////////////////////////////////////////////////
// Exported types
/////////////////////////////////////////////////////////////////////////////////
typedef void (*cbNotifyRx_t)(void *pData, uint8_t *pMsg, uint16_t size);
typedef uint8_t* (*cbAllocMsg_t)(void);
typedef void (*cbFreeMsg_t)(void* pMsg);
/////////////////////////////////////////////////////////////////////////////////
// Exported constants
/////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////
// Exported macro
/////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////
// Exported functions
/////////////////////////////////////////////////////////////////////////////////
uint8_t SerialLinkFrameProtocoleInit(SerialLinkNumber_t link,
									SerialLinkSpeed_t baurate,
									SerialLinkDataSize_t bitSize,
									SerialLinkParity_t parity,
									SerialLinkStopBit_t stopBit,
									cbNotifyRx_t cbNotifyRx,
									void* pDataNotifyRx,
									cbAllocMsg_t cbAllocMsg,
									cbFreeMsg_t cbFreeMsg
									);

void SerialLinkFrameProtocole_Send(uint8_t channel, uint8_t *pMsg, uint16_t size);

#ifdef __cplusplus
}
#endif

#endif /* __SERIAL_LINK_FRAME_PROTOCOL_H_ */

///
/// \}
///
