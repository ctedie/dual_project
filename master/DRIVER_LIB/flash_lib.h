/////////////////////////////////////////////////////////////////////////////////
/// \addtogroup flash_lib
/// \{
///
///
/// \file
/// \brief Fichier en-tete du module flash_lib
///
///
///
/////////////////////////////////////////////////////////////////////////////////

// Define to prevent recursive inclusion
#ifndef __FLASH_LIB_H_
/// \cond IGNORE_FOLLOWING
#define __FLASH_LIB_H_
/// \endcond

#ifdef __cplusplus
extern "C"
{
#endif
/////////////////////////////////////////////////////////////////////////////////
// Includes
/////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////
// Exported types
/////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////
// Exported constants
/////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////
// Exported macro
/////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////
// Exported functions
/////////////////////////////////////////////////////////////////////////////////
void FlashMemWrite(uint32_t u32Address, uint8_t *pu8Data, uint32_t u32Size);
void FlashMemRead(uint32_t u32Address, uint8_t *pu8Data, uint32_t u32Size);
void FlashMemEraseChip(void);
void FlashMemSectorErase(uint32_t u32Address);
void FlashMemEraseBlock32(uint32_t u32Address);
void FlashMemEraseBlock64(uint32_t u32Address);
uint32_t FlashMemGetPageSize(void);
uint32_t FlashMemGetSectorSize(void);
uint32_t FlashMemGetBlockSize(void);
uint32_t FlashMemGetSectorCount(void);


#ifdef __cplusplus
}
#endif

#endif //__FLASH_LIB_H_

///
/// \}
///
