/////////////////////////////////////////////////////////////////////////////////
/// \addtogroup COMMON
/// \{
///
///
/// \file
/// \brief Fichier en-tete du module COMMON
///
///
///
/////////////////////////////////////////////////////////////////////////////////

// Define to prevent recursive inclusion
#ifndef __COMMON_H_
/// \cond IGNORE_FOLLOWING
#define __COMMON_H_
/// \endcond

#ifdef __cplusplus
extern "C"
{
#endif
/////////////////////////////////////////////////////////////////////////////////
// Includes
/////////////////////////////////////////////////////////////////////////////////
#include <stdint.h>
#include <stdbool.h>
#include <string.h>

/////////////////////////////////////////////////////////////////////////////////
// Exported macro
/////////////////////////////////////////////////////////////////////////////////

/// \name List of Command ID between the 2 boards
/// \{
#define COMMAND_SET_RGB_CONTROL			1U
#define COMMAND_GET_RGB_CONTROL			2U
#define COMMAND_GET_STATUS				3U
#define COMMAND_GET_DATE_TIME			4U
#define COMMAND_UPDATE_DATE_TIME		5U
/// \}

/////////////////////////////////////////////////////////////////////////////////
// Exported types
/////////////////////////////////////////////////////////////////////////////////

typedef enum
{
	STATUS_OK,
	STATUS_ERROR
}tAnsStatus;

/// \brief RGB Control structure (#COMMAND_SET_RGB_CONTROL & COMAND_GET_RGB_CONTROL)
typedef struct
{
	uint16_t red;
	uint16_t green;
	uint16_t blue;
	uint16_t luminosity;
}__attribute__((packed)) tRGBControl;

/// \name Date time exchange
/// \{

/// \brief Day of week enum
typedef enum
{
	LUNDI,   //!< LUNDI
	MARDI,   //!< MARDI
	MERCREDI,//!< MERCREDI
	JEUDI,   //!< JEUDI
	VENDREDI,//!< VENDREDI
	SAMEDI,  //!< SAMEDI
	DIMANCHE //!< DIMANCHE
}eDayOfWeek;

/// \brief Date time structure
typedef struct
{
	uint16_t year;
	uint8_t month;
	uint8_t day;
	eDayOfWeek dayOfWeek;
	uint8_t hour;
	uint8_t minute;
	uint8_t second;
}__attribute__((packed)) tDateTime;

typedef struct
{
	uint8_t reserved;
}__attribute__((packed)) tSlaveStatus;
/// \}

/////////////////////////////////////////////////////////////////////////////////
// Exported constants
/////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////
// Exported functions
/////////////////////////////////////////////////////////////////////////////////

#ifdef __cplusplus
}
#endif

#endif //__COMMON_H_

///
/// \}
///
